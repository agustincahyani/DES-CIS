import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import java.awt.GridLayout;

import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.RowSpec;

import javax.swing.BoxLayout;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.SwingConstants;

import java.awt.Font;

import javax.swing.JButton;
import javax.swing.JSplitPane;
import javax.swing.border.BevelBorder;

import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import com.jgoodies.forms.factories.DefaultComponentFactory;

import javax.swing.JTextPane;
import com.jgoodies.forms.factories.FormFactory;
import javax.swing.JTextField;


public class DESGUIBuilder extends JFrame {

	/**
	 * Launch the application.
	 */
	
	JFileChooser chooser = new JFileChooser();
	ArrayList<String> list = new ArrayList<String>();
	String a = "";
	private JTextField textField;
	JTextPane txtpnFileChoosen = new JTextPane();
	JTextPane txtpnKeyFile = new JTextPane();
	
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DESGUIBuilder frame = new DESGUIBuilder();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public DESGUIBuilder() {
		setTitle("Tugas 1 CIS");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 321);
		
		JPanel panel = new JPanel();
		getContentPane().add(panel, BorderLayout.NORTH);
		panel.setLayout(new GridLayout(0, 1, 0, 0));
		
		JPanel panel_5 = new JPanel();
		panel.add(panel_5);
		
		JLabel lblDesCipher = new JLabel("DES Cipher");
		panel_5.add(lblDesCipher);
		lblDesCipher.setVerticalAlignment(SwingConstants.CENTER);
		lblDesCipher.setHorizontalAlignment(SwingConstants.CENTER);
		lblDesCipher.setEnabled(true);
		lblDesCipher.setFont(new Font("Tahoma", Font.BOLD, 18));
		
		JPanel panel_1 = new JPanel();
		panel.add(panel_1);
		panel_1.setLayout(new FormLayout(new ColumnSpec[] {
				ColumnSpec.decode("217px"),
				ColumnSpec.decode("217px"),},
			new RowSpec[] {
				RowSpec.decode("30px"),}));
		
		JLabel lblInputFile = new JLabel("Input File");
		lblInputFile.setFont(new Font("Tahoma", Font.BOLD, 12));
		lblInputFile.setHorizontalAlignment(SwingConstants.CENTER);
		panel_1.add(lblInputFile, "1, 1, fill, fill");
		
		JButton btnChooseFile = new JButton("Choose File");
		panel_1.add(btnChooseFile, "2, 1, fill, fill");
		btnChooseFile.addActionListener(new openListener());
		
		JPanel panel_3 = new JPanel();
		panel.add(panel_3);
		panel_3.setLayout(new FormLayout(new ColumnSpec[] {
				ColumnSpec.decode("434px"),},
			new RowSpec[] {
				FormFactory.DEFAULT_ROWSPEC,}));
		
		
		txtpnFileChoosen.setEditable(false);
		txtpnFileChoosen.setText("File Choosen:");
		panel_3.add(txtpnFileChoosen, "1, 1, fill, fill");
		
		JPanel panel_4 = new JPanel();
		panel.add(panel_4);
		panel_4.setLayout(new FormLayout(new ColumnSpec[] {
				ColumnSpec.decode("217px"),
				ColumnSpec.decode("217px:grow"),},
			new RowSpec[] {
				RowSpec.decode("30px"),}));
		
		JLabel lblKeyFiletxt = new JLabel("Key File (.txt)");
		lblKeyFiletxt.setFont(new Font("Tahoma", Font.BOLD, 11));
		panel_4.add(lblKeyFiletxt, "1, 1, center, center");
		
		JButton btnChooseFile_1 = new JButton("Choose File");
		panel_4.add(btnChooseFile_1, "2, 1, fill, fill");
		btnChooseFile_1.addActionListener(new openKeyListener());
		
		JPanel panel_6 = new JPanel();
		panel.add(panel_6);
		panel_6.setLayout(new FormLayout(new ColumnSpec[] {
				ColumnSpec.decode("center:default:grow"),},
			new RowSpec[] {
				RowSpec.decode("default:grow"),}));
		
		
		txtpnKeyFile.setEditable(false);
		txtpnKeyFile.setText("Key File:");
		panel_6.add(txtpnKeyFile, "1, 1, fill, fill");
		
		JPanel panel_2 = new JPanel();
		getContentPane().add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(new FormLayout(new ColumnSpec[] {
				ColumnSpec.decode("217px:grow"),
				ColumnSpec.decode("217px:grow"),},
			new RowSpec[] {
				RowSpec.decode("30px"),
				RowSpec.decode("50px"),
				RowSpec.decode("default:grow"),}));
		
		JLabel lblYourDesiredResult = new JLabel("Your Desired Result File Name");
		panel_2.add(lblYourDesiredResult, "1, 1, left, center");
		
		textField = new JTextField();
		panel_2.add(textField, "2, 1, fill, default");
		textField.setColumns(10);
		
		JButton btnEncrypt = new JButton("Encrypt");
		btnEncrypt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
			}
		});
		panel_2.add(btnEncrypt, "1, 2, fill, fill");
		
		JButton btnDecrypt = new JButton("Decrypt");
		panel_2.add(btnDecrypt, "2, 2, fill, fill");
		
		JTextPane txtpnTheResultFile = new JTextPane();
		txtpnTheResultFile.setEditable(false);
		txtpnTheResultFile.setText("The result file will be saved in the same directory as the input file.");
		panel_2.add(txtpnTheResultFile, "1, 3, center, center");
		
		JTextPane txtpnNefriSuswita = new JTextPane();
		txtpnNefriSuswita.setEditable(false);
		txtpnNefriSuswita.setText("Nefri Suswita\nDhika Ayu Agustin Cahyani");
		panel_2.add(txtpnNefriSuswita, "2, 3, fill, fill");
		
		String dir = System.getProperty("user.dir");
		chooser.setCurrentDirectory(new File(dir));
		
		
	}
	
	class openListener implements ActionListener {
		String row;

		public void actionPerformed(ActionEvent e) {
			int ret = chooser.showOpenDialog(null);
			if (ret == JFileChooser.APPROVE_OPTION) {
				File f = chooser.getSelectedFile();
				FileReader file;
				String namaFile = f.getName();
				txtpnFileChoosen.setText(txtpnFileChoosen.getText() + " " + namaFile);
				try {
					file = new FileReader(f);
					BufferedReader input = new BufferedReader(file);
					row = input.readLine();
					while (row != null) {
						list.add(row);
						row = input.readLine();
					}

					input.close();
					for (int i = 0; i < list.size(); i++) {
						a += list.get(i).toString() + "\n";
					}
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			}

		}

	}
	
	class openKeyListener implements ActionListener {
		String row;

		public void actionPerformed(ActionEvent e) {
			int ret = chooser.showOpenDialog(null);
			if (ret == JFileChooser.APPROVE_OPTION) {
				File f = chooser.getSelectedFile();
				FileReader file;
				String namaFile = f.getName();
				txtpnKeyFile.setText(txtpnKeyFile.getText() + " " + namaFile);
				try {
					file = new FileReader(f);
					BufferedReader input = new BufferedReader(file);
					row = input.readLine();
					while (row != null) {
						list.add(row);
						row = input.readLine();
					}

					input.close();
					for (int i = 0; i < list.size(); i++) {
						a += list.get(i).toString() + "\n";
					}
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			}

		}

	}


}
